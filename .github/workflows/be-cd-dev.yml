name: BE CD for Dev 

on:
  push:
    branches:
      - dev

permissions:
  contents: read

jobs:
  build-and-docker-operations:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.generate_tag.outputs.tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          
      - name: Update application.yml
        run: |
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-write-only: true

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
          
      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build JAR
        run: ./gradlew bootjar

      - name: Generate Unique Tag
        id: generate_tag
        run: echo "::set-output name=tag::$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Build image
        run: docker build -f docker/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY_NAME }}:${{ steps.generate_tag.outputs.tag }} .

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Push image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY_NAME }}:${{ steps.generate_tag.outputs.tag }}

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add EC2 to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Set up SSH Tunneling to RDS
        run: |
          ssh -i ~/.ssh/id_rsa -f -N -L 3306:${{ secrets.RDS_ENDPOINT }}:3306 ubuntu@${{ secrets.EC2_HOST }}

      - name: Run Docker Container on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << EOF
          docker load < /home/ubuntu/dorun-app.tar
          docker stop dorun-app || true
          docker rm dorun-app || true
          docker run -d --name dorun-app -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=dev \
            -e MYSQL_DB_URL=127.0.0.1 \
            -e MYSQL_DB_PORT=3306 \
            -e MYSQL_DB_NAME=${{ secrets.MYSQL_DB_NAME }} \
            -e MYSQL_DB_USERNAME=${{ secrets.MYSQL_DB_USERNAME }} \
            -e MYSQL_DB_PASSWORD=${{ secrets.MYSQL_DB_PASSWORD }} \
            dorun-app:latest
          EOF
    
  deploy-to-aws:
    needs: build-and-docker-operations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      
